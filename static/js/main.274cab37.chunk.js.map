{"version":3,"sources":["logo.svg","Home.js","About.js","Users.js","firebase.js","App.js","index.js","swDev.js"],"names":["module","exports","Home","About","Users","useState","data","setData","mode","setMode","useEffect","fetch","then","response","json","result","console","warn","localStorage","setItem","JSON","stringify","catch","err","collection","getItem","parse","class","role","Table","striped","bordered","hover","map","item","id","name","email","address","street","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","React","msg","messaging","requestPermission","getToken","className","Navbar","bg","variant","Brand","href","Nav","Link","to","path","component","ReactDOM","render","StrictMode","document","getElementById","determineAppServerKey","base64String","padding","repeat","length","base64","replace","rawData","window","atob","outputArray","Uint8Array","i","charCodeAt","urlBase64ToUint8Array","swUrl","process","navigator","serviceWorker","register","pushManager","getSubscription","subscription","subscribe","userVisibleOnly","applicationServerKey","swDev"],"mappings":"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","file":"static/js/main.274cab37.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'\nexport default function Home()\n{\n    return(\n        <div>\n            <h1>Home Component</h1>\n        </div>\n    )\n}","import React from 'react'\nexport default function About()\n{\n    return(\n        <div>\n            <h1>About Component</h1>\n        </div>\n    )\n}","import React, { useState, useEffect } from 'react'\nimport { Table } from 'react-bootstrap'\nexport default function Users() {\n    const [data, setData] = useState([])\n    const [mode, setMode] = useState('online');\n    useEffect(() => {\n        let url = \"https://jsonplaceholder.typicode.com/users\"\n        fetch(url).then((response) => {\n            response.json().then((result) => {\n                console.warn(result)\n                setData(result)\n                localStorage.setItem(\"users\", JSON.stringify(result))\n            })\n        }).catch(err => {\n            setMode('offline')\n            let collection = localStorage.getItem('users');\n            setData(JSON.parse(collection))\n        })\n    }, [])\n    return (\n        <div>\n            <div>\n                {\n                    mode === 'offline' ?\n                        <div class=\"alert alert-warning\" role=\"alert\">\n                            you are in offline mode or some issue with connection\n</div>\n                        : null\n\n                }\n            </div>\n            <Table striped bordered hover>\n                <thead>\n                    <tr>\n                        <th>Id</th>\n                        <th>Name</th>\n                        <th>Email</th>\n                        <th>Address</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        data.map((item) => (\n                            <tr>\n                                <td>{item.id}</td>\n                                <td>{item.name}</td>\n                                <td>{item.email}</td>\n                                <td>{item.address.street}</td>\n                            </tr>\n                        ))\n                    }\n\n                </tbody>\n            </Table>\n        </div>\n    )\n}","import firebase from 'firebase'\nvar firebaseConfig = {\n    apiKey: \"AIzaSyAD2mE_w_CDDEIinVpplP4iK9ncllAgiW8\",\n    authDomain: \"pwa-app-ccb69.firebaseapp.com\",\n    databaseURL: \"https://pwa-app-ccb69.firebaseio.com\",\n    projectId: \"pwa-app-ccb69\",\n    storageBucket: \"pwa-app-ccb69.appspot.com\",\n    messagingSenderId: \"87598063745\",\n    appId: \"1:875918063745:web:366bb079c60e9d08cdb580\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\nexport default firebase","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Navbar, Nav } from 'react-bootstrap'\nimport Home from './Home'\nimport About from './About'\nimport Users from './Users'\nimport firebase from './firebase'\nimport { Link, Route, BrowserRouter as Router, Switch } from 'react-router-dom'\nfunction App() {\n  React.useEffect(()=>{\n    const msg=firebase.messaging();\n    msg.requestPermission().then(()=>{\n      return msg.getToken();\n    }).then((data)=>{\n      console.warn(\"token\",data)\n    })\n  })\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navbar bg=\"primary\" variant=\"dark\">\n          <Navbar.Brand href=\"#home\">Navbar</Navbar.Brand>\n          <Nav className=\"mr-auto\">\n            <Nav.Link ><Link to=\"/\">Home</Link></Nav.Link>\n            <Nav.Link ><Link to=\"/about\" >About</Link></Nav.Link>\n            <Nav.Link><Link to=\"/users\">Users</Link></Nav.Link>\n          </Nav>\n        </Navbar>\n        <Switch>\n          <Route path=\"/about\" component={About} ></Route>\n          <Route path=\"/users\" component={Users} ></Route>\n          <Route path=\"/\" component={Home} ></Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport swDev from './swDev'\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nswDev();","export default function swDev()\n{\n  function determineAppServerKey() {\n    const vapidPublicKey =\n    \"BJthRQ5myDgc7OSXzPCMftGw-n16F7zQBEN7EUD6XxcfTTvrLGWSIG7y_JxiWtVlCFua0S8MTB5rPziBqNx1qIo\";\n      return urlBase64ToUint8Array(vapidPublicKey);\n  }\n\n  function urlBase64ToUint8Array(base64String) {\n    const padding = '='.repeat((4 - base64String.length % 4) % 4);\n    const base64 = (base64String + padding)\n      .replace(/\\-/g, '+')\n      .replace(/_/g, '/');\n\n    const rawData = window.atob(base64);\n    const outputArray = new Uint8Array(rawData.length);\n\n    for (let i = 0; i < rawData.length; ++i) {\n      outputArray[i] = rawData.charCodeAt(i);\n    }\n    return outputArray;\n  }\n  \n    let swUrl=  `${process.env.PUBLIC_URL}/sw.js`\n    navigator.serviceWorker.register(swUrl).then((response)=>{\n        console.warn(\"response\",response)\n\n        return response.pushManager.getSubscription()\n        .then(function (subscription) {\n           response.pushManager.subscribe({\n            userVisibleOnly: true,\n            applicationServerKey: determineAppServerKey()\n          })\n          \n\n        })\n\n    }) \n}"],"sourceRoot":""}